version: '3.8'

services:
  nextjs:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    restart: always
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=adminx
      - MYSQL_DATABASE=locoride
    
  # golang:
  #   container_name: backend
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - '8080:8080'
  #   restart: always
  #   depends_on:
  #     - mysql
  #     # - postgres

  mysql:
    container_name: mysql-db
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: adminx
      MYSQL_DATABASE: locoride
      MYSQL_USER: root
      MYSQL_PASSWORD: adminx
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: adminx
    ports:
      - '8080:80'
    depends_on:
      - mysql
  
#   postgres:
#     container_name: postgres-db
#     image: postgres:13
#     ports:
#       - '5432:5432'
#     environment:
#       POSTGRES_DB: locoride
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: adminx
#     volumes:
#       - data/postgres

#   pgadmin:
#     image: dpage/pgadmin4
#     ports:
#       - '8082:80'
#     environment:
#       PGADMIN_DEFAULT_EMAIL: adminx@adminx.com
#       PGADMIN_DEFAULT_PASSWORD: adminx
#     depends_on:
#       - postgres
volumes:
  mysql-data:

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     - NEXT_PUBLIC_GOOGLE_API_KEY=${NEXT_PUBLIC_GOOGLE_API_KEY}
  #   depends_on:
  #     - backend
  #     - mysql
  #     - postgres

  